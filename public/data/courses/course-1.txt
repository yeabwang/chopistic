{
  "id": 1,
  "title": "Computer Vision Fundamentals",
  "category": "Computer Vision",
  "level": "Beginner → Intermediate",
  "duration": "8 weeks",
  "description": "Learn the core concepts and hands-on skills of modern computer vision — from OpenCV image processing to CNNs, object detection, segmentation, and deployment.",
  "instructor": "Sarkhan Huseynov",
  "enrollmentCount": 0,
  "rating": 0,
  "media": "videos/feature-cv.mp4",
  "thumbnail": "img/cv-gallery-1.webp",
  "chapters": [
    {
      "id": 1,
      "title": "Introduction to Computer Vision",
      "duration": "45 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=2w8XIskzdFw",
      "content": {
        "overview": "What is computer vision, where it’s used, and how images become data.",
        "sections": [
          {
            "title": "What is Computer Vision?",
            "content": "Enabling machines to interpret and understand visual information."
          },
          {
            "title": "History & Applications",
            "content": "From early edge detectors to deep learning; uses in healthcare, retail, autonomous driving."
          },
          {
            "title": "Images as Data",
            "content": "Pixels, color spaces (RGB/GRAY/HSV), shapes, channels."
          }
        ],
        "keyPoints": [
          "Define CV and its scope",
          "Understand image representations",
          "Identify real-world applications"
        ],
        "practicalExercise": "List 5 CV applications you see around you and describe the input/output."
      }
    },
    {
      "id": 2,
      "title": "OpenCV Basics (Python)",
      "duration": "60 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=oXlwWbU8l2o",
      "content": {
        "overview": "Hands-on with OpenCV: read/write, resize, crop, draw, filter, and transform images.",
        "sections": [
          {
            "title": "I/O & Visualization",
            "content": "imread, imwrite, imshow; video capture"
          },
          {
            "title": "Transforms & Filters",
            "content": "resize, rotate, blur, Canny, thresholding"
          },
          {
            "title": "Geometric Ops",
            "content": "affine/perspective transforms"
          }
        ],
        "keyPoints": [
          "Navigate OpenCV API",
          "Apply common preprocessing ops",
          "Build small image utilities"
        ],
        "practicalExercise": "Implement a preprocessing pipeline that converts images to grayscale, denoises, equalizes histogram, and detects edges."
      }
    },
    {
      "id": 3,
      "title": "Convolutional Neural Networks (CNNs)",
      "duration": "60 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=YRhxdVk_sIs",
      "content": {
        "overview": "Convolutions, kernels, feature maps, pooling, and why CNNs work on images.",
        "sections": [
          {
            "title": "Convolutions & Filters",
            "content": "Kernels, stride, padding, receptive fields"
          },
          {
            "title": "Architectures",
            "content": "LeNet → VGG → ResNet (high-level)"
          },
          {
            "title": "Training & Evaluation",
            "content": "loss, optimization, overfitting, augmentation"
          }
        ],
        "keyPoints": [
          "Explain convolution and pooling",
          "Name common CNN building blocks",
          "Recognize key architectures"
        ],
        "practicalExercise": "Train a simple CNN on CIFAR-10; report accuracy and a confusion matrix."
      }
    },
    {
      "id": 4,
      "title": "Transfer Learning for Image Classification (PyTorch)",
      "duration": "75 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=Lxm8x35vlM0",
      "content": {
        "overview": "Speed up training with pretrained backbones (ResNet, MobileNet) and fine-tune on your dataset.",
        "sections": [
          {
            "title": "Feature Extract vs Fine-tune",
            "content": "When to freeze vs unfreeze layers"
          },
          {
            "title": "Data & Augmentation",
            "content": "Transforms, normalization, imbalance"
          },
          {
            "title": "Logging & Metrics",
            "content": "accuracy, F1, confusion matrix"
          }
        ],
        "keyPoints": [
          "Load pretrained weights",
          "Replace classifier head",
          "Fine-tune safely and evaluate"
        ],
        "practicalExercise": "Fine-tune ResNet-18 on a 2–5 class custom dataset; compare feature-extract vs full fine-tune."
      }
    },
    {
      "id": 5,
      "title": "Object Detection with YOLOv8",
      "duration": "75 minutes",
      "videoUrl": "https://www.youtube.com/playlist?list=PLv8Cp2NvcY8ClWpGlPJ9tmBmUhlA94Umy",
      "content": {
        "overview": "From boxes and anchors to training a custom detector with YOLOv8.",
        "sections": [
          {
            "title": "Detection Basics",
            "content": "Bounding boxes, IoU, NMS, mAP"
          },
          {
            "title": "YOLOv8 Workflow",
            "content": "data.yaml, training, validation, inference"
          },
          {
            "title": "Error Analysis",
            "content": "confusion, FP/FN, class imbalance"
          }
        ],
        "keyPoints": [
          "Prepare datasets in YOLO format",
          "Train/validate/infer with YOLOv8 CLI",
          "Interpret metrics (PR curves, mAP)"
        ],
        "practicalExercise": "Label 200 images for two classes and train YOLOv8n; submit PR curve screenshot and sample detections."
      }
    },
    {
      "id": 6,
      "title": "Image Segmentation with U-Net",
      "duration": "75 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=IHq1t7NxS8k",
      "content": {
        "overview": "Pixel-wise prediction with U-Net; loss functions and evaluation.",
        "sections": [
          {
            "title": "Semantic vs Instance",
            "content": "Differences and use-cases"
          },
          {
            "title": "U-Net Blocks",
            "content": "encoder–decoder, skip connections"
          },
          {
            "title": "Training",
            "content": "dice/bce losses, augmentation, metrics (IoU/Dice)"
          }
        ],
        "keyPoints": [
          "Explain U-Net architecture",
          "Choose proper loss/metrics",
          "Handle class imbalance"
        ],
        "practicalExercise": "Train U-Net on a small medical or aerial dataset; report IoU and show masks."
      }
    },
    {
      "id": 7,
      "title": "Features, Matching & Homography",
      "duration": "60 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=XMBkyudYjm4",
      "content": {
        "overview": "Classical CV: SIFT/ORB features, matching, RANSAC, panorama stitching.",
        "sections": [
          {
            "title": "Keypoints & Descriptors",
            "content": "SIFT/ORB and scale/rotation invariance"
          },
          {
            "title": "Matching",
            "content": "BF/FLANN, ratio test"
          },
          {
            "title": "Geometry",
            "content": "homography, RANSAC, warpPerspective"
          }
        ],
        "keyPoints": [
          "Detect and match features",
          "Estimate homography robustly",
          "Compose simple panoramas"
        ],
        "practicalExercise": "Implement image stitching from two overlapping photos using ORB+RANSAC."
      }
    },
    {
      "id": 8,
      "title": "Model Export & Deployment Basics (ONNX/TFLite)",
      "duration": "60 minutes",
      "videoUrl": "https://www.youtube.com/watch?v=7nutT3Aacyw",
      "content": {
        "overview": "Export trained models and run them efficiently on-device.",
        "sections": [
          {
            "title": "Export Paths",
            "content": "PyTorch→ONNX, TF→TFLite"
          },
          {
            "title": "Optimizations",
            "content": "quantization, pruning (overview)"
          },
          {
            "title": "Edge Demos",
            "content": "basic Raspberry Pi / mobile demo"
          }
        ],
        "keyPoints": [
          "Export to ONNX or TFLite",
          "Understand quantization tradeoffs",
          "Build a minimal inference script"
        ],
        "practicalExercise": "Export a classifier to ONNX/TFLite and run inference on sample images on CPU only."
      }
    }
  ],
  "prerequisites": [
    "Basic Python (variables, functions, packages)",
    "High-school mathematics (algebra, basic calculus)",
    "Curiosity about AI and images"
  ],
  "learningOutcomes": [
    "Understand the computer vision pipeline and image representations",
    "Use OpenCV for image I/O, transforms, filtering, and feature extraction",
    "Build and train CNNs for image classification",
    "Apply transfer learning with PyTorch to real datasets",
    "Train object detectors (YOLOv8) and evaluate with mAP/IoU",
    "Implement image segmentation with U-Net and measure IoU/Dice",
    "Work with classical features/matching and homography",
    "Export and deploy models via ONNX/TFLite basics"
  ],
  "resources": [
    {
      "type": "Documentation",
      "title": "OpenCV-Python Tutorials",
      "url": "https://docs.opencv.org/"
    },
    {
      "type": "Documentation",
      "title": "PyTorch Tutorials",
      "url": "https://pytorch.org/tutorials/"
    },
    {
      "type": "Dataset",
      "title": "CIFAR-10",
      "url": "https://www.cs.toronto.edu/~kriz/cifar.html"
    },
    {
      "type": "Dataset",
      "title": "COCO",
      "url": "https://cocodataset.org/"
    },
    {
      "type": "Dataset",
      "title": "Pascal VOC",
      "url": "http://host.robots.ox.ac.uk/pascal/VOC/"
    }
  ],
  "quiz": {
    "available": true,
    "questionsCount": 40,
    "passingScore": 80,
    "timeLimit": 50
  }
}